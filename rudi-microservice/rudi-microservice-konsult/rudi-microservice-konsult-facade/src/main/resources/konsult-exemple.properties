# Surcharger les paramètres de "genius.properties"
server.port=8086

# Configuration BDD 
spring.datasource.url=jdbc:postgresql://localhost:5432/rudi
spring.datasource.username=...
spring.datasource.password=...
spring.jpa.show-sql=true

# Génération du script par hibernate + jpa
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=none

eureka.client.serviceURL.defaultZone=http://...:...@localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.instance.hostname=localhost

rudi.kalim.scheduler.pool.size=2
rudi.kalim.scheduler.sendReport.delay=30000
rudi.kalim.scheduler.treatment.delay=30000

rudi.kalim.sendReport.retry=5
rudi.kalim.sendReport.period=3600

# Dataverse
dataverse.api.url=http://...:${dataverse.instance1.port}/api
dataverse.api.token=...
dataverse.api.rudi.data.alias=rudi_data
dataverse.api.rudi.archive.alias=rudi_archive

# Rudi OAuth2
module.oauth2.provider-uri=http://localhost:8085/oauth/token
module.oauth2.client-id=...
module.oauth2.client-secret=...
module.oauth2.scope=read,write

security.jwt.access.tokenKey=...

module.oauth2.check-token-uri=http://localhost:8085/oauth/check_token

## Configuration API Manager
##########################
apimanager.base-url=https://...
apimanager.api.url=https://.../api/am
apimanager.api.admin.context=/admin/v1
apimanager.api.publisher.context=/publisher/v1
apimanager.api.store.context=/store/v1
apimanager.api.store.api.categories=RudiData
apimanager.api.store.application.default.name=rudi_application
apimanager.api.store.application.default.requestPolicy=Unlimited
apimanager.api.store.subscription.default.policy=Unlimited
apimanager.api.store.subscription.anonymous.policy=Bronze

apimanager.gateway.url=https://...

# paramètres d'authentification OAuth2 des users vers WSO2
apimanager.oauth2.client.admin.registration.client-id=...
apimanager.oauth2.client.admin.registration.client-secret=...
apimanager.oauth2.client.admin.registration.id=rest_api_admin
apimanager.oauth2.client.admin.registration.scopes=apim:admin
apimanager.oauth2.client.admin.username=...
apimanager.oauth2.client.admin.password=...
apimanager.oauth2.client.rudi.username=...
apimanager.oauth2.client.rudi.password=...
apimanager.oauth2.client.anonymous.username=anonymous
apimanager.oauth2.client.anonymous.password=anonymous

apimanager.oauth2.client.default.registration.scopes=apim:subscribe,apim:api_view,apim:api_create,apim:api_publish,apim:api_delete
apimanager.oauth2.client.provider.token-uri=https://.../oauth2/token

## répertoire temporaire
temporary.directory=${java.io.tmpdir}
