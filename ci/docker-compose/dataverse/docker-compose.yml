version: '3'
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - --providers.docker.network=traefik
      - "--entrypoints.web.address=:81"
    ports:
      # The HTTP port
      - "81:81"
      # The HTTPS port
      #- "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8189:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # volume to store letsencrypt certificates
      - "./letsencrypt:/letsencrypt"
    networks:
      - traefik

  postgres:
    networks:
      - traefik
    container_name: postgres
    ports:
      - "5433:5432"
    image: rudi/dataverse-postgres
    restart: unless-stopped

    environment:
      - "LC_ALL=C.UTF-8"
      - "POSTGRES_DB={{dataverse_db_name}}"
      - "POSTGRES_USER={{dataverse_db_user}}"
      - "POSTGRES_PASSWORD={{dataverse_db_password}}"
      - "POSTGRES_PORT=5432"
    env_file:
      - .env
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down

  ns:
    networks:
      - traefik
    image: coronawhy/semantic-gateway
    container_name: namespaces
    ports:
      - "8002:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ns.rule=Host(`ns.${traefikhost}`)"

  nde:
    networks:
      - traefik
    image: coronawhy/nde
    container_name: nde
    ports:
      - "8003:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nde.rule=Host(`nde.${traefikhost}`)"
      - "traefik.http.services.nde.loadbalancer.server.port=8080"

  whoami:
    networks:
      - traefik
    image: "containous/whoami"
    container_name: "whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${traefikhost}`)"

  solr:
    networks:
      - traefik
    image: rudi/dataverse-solr
    container_name: solr
    privileged: true
    ports:
      - "8983:8983"
    environment:
      - "DATAVERSE_HOST=dataverse"
      - "SOLR_HOST=solr"
      - "SOLR_PORT=8983"
      - "SOLR_JAVA_MEM=-Xms1g -Xmx1g"
    env_file:
      - .env
    volumes:
      - solr-data:/opt/solr/server/solr/collection1/data
      - ./solr-tmp:/var/tmp
      - ./solr-data:/var/solr/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.solr.rule=Host(`solr.${traefikhost}`)"
      - "traefik.http.services.solr.loadbalancer.server.port=8383"

  dataverse:
    networks:
      - traefik
    image: rudi/dataverse
    container_name: dataverse
    privileged: true
    user:
      "root"
    ports:
      - "4848:4848"
      - "{{dataverse_instance1_port}}:8080"
      - "8009:8009"
      - "8181:8181"
    environment:
      - "CVM_SERVER_NAME=CESSDA" #Optional
      - "CVM_SERVER_URL=https://ns.${traefikhost}:83"
      - "CVM_TSV_SOURCE=https://github.com/IQSS/dataverse-docker/releases/download/5.3-cv/cvocdemo.tsv"
      - "LANG=en"
      - "cvManager=http://"
      - "BUNDLEPROPERTIES=Bundle.properties"
      - "ADMIN_EMAIL=admin@localhost"
      - "MAIL_SERVER=mailrelay"
      - "SOLR_LOCATION=solr:8983"
      - "RSERVE_HOST=localhost"
      - "RSERVE_PORT=6311"
      - "RSERVE_USER=rserve"
      - "RSERVE_PASSWORD=rserve"
      - "DATAVERSE_DB_HOST=postgres"
      - "DATAVERSE_DB_PORT=5432"
      - "DATAVERSE_DB_USER={{dataverse_db_user}}"
      - "DATAVERSE_DB_PASSWORD={{dataverse_db_password}}"
      - "DATAVERSE_DB_NAME={{dataverse_db_name}}"
      - "DATAVERSE_SERVICE_HOST"
      - "DATAVERSE_URL"
      - "SOLR_SERVICE_HOST=solr"
      - "SOLR_SERVICE_PORT=8983"
      - "GLASSFISH_DOMAIN=domain1"
    env_file:
      - .env
    depends_on:
      - postgres
      - solr
    volumes:
      - ./secrets:/secrets
      - ./dataverse-deploy:/opt/payara/appserver/glassfish/domains/domain1/autodeploy
      - ./dataverse-files:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dataverse.rule=Host(`dv.${traefikhost}`)"
      - "traefik.http.services.dataverse.loadbalancer.server.port=8080"

volumes:
  database-data:
  solr-data:

networks:
  traefik:
    external: true
